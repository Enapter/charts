apiVersion: v1
kind: Secret
metadata:
  name: {{ include "keydb.fullname" . }}-utils
  labels:
    {{- include "keydb.labels" . | nindent 4 }}
type: Opaque
stringData:
  server.sh: |
    #!/bin/sh
    set -euxo

    host="$(hostname)"
    replicas=

    node=0
    while [ $node -le {{ (sub (.Values.nodes | int) 1) }} ]; do
      if [ "${host}" != "{{ include "keydb.fullname" . }}-${node}" ]; then
          replicas="${replicas} --replicaof {{ include "keydb.fullname" . }}-${node}.{{ include "keydb.fullname" . }}-headless {{ .Values.port }}"
      fi
      node=$(( node + 1 ))
    done
    exec keydb-server /etc/keydb/redis.conf \
        --active-replica {{ .Values.activeReplicas | quote }} \
        --multi-master {{ .Values.multiMaster | quote }} \
        --appendonly {{ .Values.appendonly | quote }} \
        --bind "0.0.0.0" \
        --port "{{ .Values.internalPort }}" \
        --protected-mode {{ .Values.protectedMode | quote }} \
        --server-threads {{ .Values.threads | quote }} \
        {{- if .Values.existingSecret }}
        --masterauth "${REDIS_PASSWORD}" \
        --requirepass "${REDIS_PASSWORD}" \
        {{- else if .Values.password }}
        --masterauth {{ .Values.password | quote }} \
        --requirepass {{ .Values.password | quote }} \
        {{- end }}
        {{- range $item := .Values.configExtraArgs }}
        {{- range $key, $value := $item }}
        {{- if kindIs "invalid" $value }}
        --{{ $key }} \
        {{- else if kindIs "slice" $value }}
        --{{ $key }}{{ range $value }} {{ . | quote }}{{ end }} \
        {{- else }}
        --{{ $key }} {{ $value | quote }} \
        {{- end }}
        {{- end }}
        {{- end }}
        $(echo "${replicas}" | xargs)
